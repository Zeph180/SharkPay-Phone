apply plugin: 'com.android.application'

android {
    namespace "io.ionic.starter"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "io.ionic.starter"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
  packagingOptions {
    pickFirst '**/*.so'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/*.kotlin_module'
    exclude 'META-INF/*.version'
  }
}

//repositories {
//    flatDir{
//        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
//    }
//}

repositories {
  google()
  mavenCentral()
  maven { url 'https://jitpack.io' }
  flatDir {
    dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
  }
}

//dependencies {
//    implementation fileTree(include: ['*.jar', '*aar'], dir: 'libs')
//  implementation(name: 'printer-lib-3.2.0', ext: 'aar')
//  implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
//    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
//    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
//    implementation project(':capacitor-android')
//    testImplementation "junit:junit:$junitVersion"
//    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
//    implementation project(':capacitor-cordova-android-plugins')
//  implementation 'com.github.tbruyelle:rxpermissions:3.1.0'
//  implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
//  implementation 'androidx.recyclerview:recyclerview:1.3.2'
//}

dependencies {
  implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
//   implementation(name: 'printer-lib-3.2.0', ext: 'aar') {
//     transitive = true // Ensure transitive dependencies are included
//   }

  // Add explicit versions for all dependencies
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
  implementation "androidx.core:core-splashscreen:1.0.0"
  implementation "androidx.recyclerview:recyclerview:1.3.2"

  // Capacitor
  implementation project(':capacitor-android')
  implementation project(':capacitor-cordova-android-plugins')

  // Testing
  testImplementation "junit:junit:4.13.2"
  androidTestImplementation "androidx.test.ext:junit:1.1.5"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
}
apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

configurations.all {
  resolutionStrategy {
    force 'androidx.core:core-ktx:1.12.0'
    force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
  }
}
